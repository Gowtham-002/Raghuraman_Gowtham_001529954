/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.Menu.Item;
import Business.Menu.MenuDirectory;
import Business.Order.Order;
import Business.Order.OrderDirectory;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class CustomerAreaJPanel extends javax.swing.JPanel {

    private final JPanel userProcessContainer;
    private final EcoSystem system;
    private final UserAccount userAccount;
    private final CustomerDirectory customerDirectory;
    private final RestaurantDirectory restaurantDirectory;
    private final DeliveryManDirectory deliveryManDirectory;
    private final MenuDirectory menuDirectory;
    private final OrderDirectory orderDirectory;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public CustomerAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system, CustomerDirectory customerDirectory, RestaurantDirectory restaurantDirectory, DeliveryManDirectory deliveryManDirectory, MenuDirectory menuDirectory,OrderDirectory orderDirectory) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.userAccount = account;
        this.customerDirectory = customerDirectory;
        this.restaurantDirectory = restaurantDirectory;
        this.deliveryManDirectory = deliveryManDirectory;
        this.menuDirectory = menuDirectory;
        this.orderDirectory = orderDirectory;
        populateMenuTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tblrestaurantview.getModel();
        model.setRowCount(0);
        for (Item item : menuDirectory.getMenuDirectory()) {
            Object[] row = new Object[5];
            row[0] = restaurantDirectory.getRestName(item.getRestaurantID());
            row[1] = item.getItemName();
            row[2] = item.getItemcalories();
            row[3] = item.getItemcuisine();
            row[4] = item.getItemprice();
            model.addRow(row);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblrestaurantview = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        boxquantity = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        btnplaceorder = new javax.swing.JButton();

        tblrestaurantview.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Restaurant", "Item Name", "Calories", "Cuisine", "Price in Dollar($)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblrestaurantview);
        if (tblrestaurantview.getColumnModel().getColumnCount() > 0) {
            tblrestaurantview.getColumnModel().getColumn(0).setResizable(false);
            tblrestaurantview.getColumnModel().getColumn(1).setResizable(false);
            tblrestaurantview.getColumnModel().getColumn(2).setResizable(false);
            tblrestaurantview.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Choose Your Restaurant");

        jButton1.setText("Back");

        jButton2.setText("View Order History");

        jLabel2.setText("Quantity");

        btnplaceorder.setText("Place Order");
        btnplaceorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnplaceorderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(boxquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(btnplaceorder, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(boxquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnplaceorder))
                .addGap(164, 164, 164))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnplaceorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnplaceorderActionPerformed
        // TODO add your handling code here:
       int row = tblrestaurantview.getSelectedRow();
        int count = tblrestaurantview.getSelectedRowCount();
        if (count == 1) {
            if (row >= 0) {
                int quantity = (Integer) boxquantity.getValue();
                Restaurant restaurant = restaurantDirectory.getRestaurant(menuDirectory.getItemByKey(row).getRestaurantID());
                Customer customer = customerDirectory.getCustomer(userAccount.getEmployee().getName());
                Item item = menuDirectory.getItemByKey(row);
                String status = "Awaiting Order Confirmation";

                Order orderRequest = orderDirectory.add();
                orderRequest.setOrderNo("Order" + (orderDirectory.getOrderDirectory().size()));
                orderRequest.setItem(item);
                orderRequest.setRestaurant(restaurant);
                orderRequest.setCustomer(customer);
                orderRequest.setQuantity(quantity);                
                orderRequest.setMessage("Order has been placed");
                orderRequest.setSender(userAccount);
                orderRequest.setStatus(status);
                system.setOrderDirectory(orderDirectory);
                system.getWorkQueue().getWorkRequestList().add(orderRequest);
                JOptionPane.showMessageDialog(null, "Your Order has been sucessfully placed!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select one row!");
        } 
        
    }//GEN-LAST:event_btnplaceorderActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner boxquantity;
    private javax.swing.JButton btnplaceorder;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblrestaurantview;
    // End of variables declaration//GEN-END:variables

    public void populateMenuTable() {
       DefaultTableModel model = (DefaultTableModel) tblrestaurantview.getModel();
        model.setRowCount(0);
        for (Item item : menuDirectory.getMenuDirectory()) {
            Object[] row = new Object[5];
            row[0] = restaurantDirectory.getRestName(item.getRestaurantID());
            row[1] = item.getItemName();
            row[2] = item.getItemcalories();
            row[3] = item.getItemcuisine();
            row[4] = item.getItemprice();
            model.addRow(row);
        } //To change body of generated methods, choose Tools | Templates.
    }
}
