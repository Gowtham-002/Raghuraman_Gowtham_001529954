/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.CustomerDirectory;
import Business.DeliveryMan.DeliveryMan;
import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.Restaurant.RestaurantDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author gowth
 */
public class ManageDeliveryExecutive extends javax.swing.JPanel {

    JPanel container;
    EcoSystem system;
    CustomerDirectory customerDirectory;
    RestaurantDirectory restaurantDirectory;
    DeliveryManDirectory deliveryManDirectory;
    /**
     * Creates new form ManageDeliveryExecutive
     */
    public ManageDeliveryExecutive(JPanel userProcessContainer, EcoSystem system, DeliveryManDirectory deliveryManDirectory) {
        initComponents();
        this.container = userProcessContainer;
        this.system = system;
        this.deliveryManDirectory = deliveryManDirectory;
        populateDeliveryManList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbldeliveryexec = new javax.swing.JTable();
        btnback = new javax.swing.JButton();
        btnadddeliveryexec = new javax.swing.JButton();
        btndeletedeliveryexec = new javax.swing.JButton();
        btnupdatedeliveryexec = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Manage Delivery Executives");

        tbldeliveryexec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Delivery Executive ID", "Delivery Exec Name", "Phone Number", "Email ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbldeliveryexec);

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btnadddeliveryexec.setText("Add Delivery Exec");
        btnadddeliveryexec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadddeliveryexecActionPerformed(evt);
            }
        });

        btndeletedeliveryexec.setText("Delete Delivery Exec");
        btndeletedeliveryexec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeletedeliveryexecActionPerformed(evt);
            }
        });

        btnupdatedeliveryexec.setText("Update Delivery Exec");
        btnupdatedeliveryexec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatedeliveryexecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(btnadddeliveryexec)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnupdatedeliveryexec)
                                .addGap(56, 56, 56)
                                .addComponent(btndeletedeliveryexec, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnback)
                    .addComponent(btnadddeliveryexec)
                    .addComponent(btndeletedeliveryexec)
                    .addComponent(btnupdatedeliveryexec))
                .addContainerGap(199, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
           container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnadddeliveryexecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadddeliveryexecActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) container.getLayout();
        AddDeliveryExecutive createDeliveryManJPanel = new AddDeliveryExecutive(container, system, deliveryManDirectory);
        container.add(createDeliveryManJPanel);
        layout.next(container);
    }//GEN-LAST:event_btnadddeliveryexecActionPerformed

    private void btndeletedeliveryexecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletedeliveryexecActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbldeliveryexec.getSelectedRow();
        int count = tbldeliveryexec.getSelectedRowCount();
        if(count == 1){
            if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                deliveryManDirectory.deleteDeliveryMan(selectedRow,system);
                populateDeliveryManList();
            }
        }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete");
        }
    }//GEN-LAST:event_btndeletedeliveryexecActionPerformed

    private void btnupdatedeliveryexecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatedeliveryexecActionPerformed
        // TODO add your handling code here:
        
         int selectedRow = tbldeliveryexec.getSelectedRow();
        int count = tbldeliveryexec.getSelectedRowCount();
        if(count == 1){
            if (selectedRow >= 0) {
            CardLayout layout = (CardLayout) container.getLayout();
            DeliveryMan deliveryMan = deliveryManDirectory.getDeliveryManId(selectedRow);
            UpdateDeliveryExecPanel viewDeliveryManJPanel = new UpdateDeliveryExecPanel(system,container, deliveryMan, deliveryManDirectory);
            container.add(viewDeliveryManJPanel);
            layout.next(container);
        }
        }
         else {
            JOptionPane.showMessageDialog(null, "Please select a row to update");
        }
        
    }//GEN-LAST:event_btnupdatedeliveryexecActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadddeliveryexec;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btndeletedeliveryexec;
    private javax.swing.JButton btnupdatedeliveryexec;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbldeliveryexec;
    // End of variables declaration//GEN-END:variables

    public void populateDeliveryManList() {
        DefaultTableModel model = (DefaultTableModel) tbldeliveryexec.getModel();
        
        model.setRowCount(0);
        for (UserAccount ua : system.getUserAccountDirectory().getUserAccountList()) {
            for (DeliveryMan deliveryMan : deliveryManDirectory.getDeliveryManDirectory()) {
                if (deliveryMan.getDeliveryId().equalsIgnoreCase(ua.getEmployee().getName())) {
                    Object[] row = new Object[5];
                    row[0] = deliveryMan.getDeliveryId();
                    row[1] = deliveryMan.getName();
                    row[2] = deliveryMan.getPhoneNo();
                    row[3] = deliveryMan.getEmail();
                    row[4] = ua.getUsername();
                    model.addRow(row);
                }
            }
        }
    }
}
