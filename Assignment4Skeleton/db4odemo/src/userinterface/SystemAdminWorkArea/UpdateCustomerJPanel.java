/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gowth
 */
public class UpdateCustomerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateCustomerJPanel
     */
    
    public CustomerDirectory customerDirectory;
    public JPanel container;
    public EcoSystem system;
    
    public UpdateCustomerJPanel(JPanel userProcessContainer, EcoSystem system, CustomerDirectory customerDirectory) {
         initComponents();
        this.system = system;
        this.customerDirectory = customerDirectory;
        this.container = userProcessContainer;
        populateCustomerList();
    }
    
    public void populateCustomerList() {
        DefaultTableModel model = (DefaultTableModel) Customerlookuptable.getModel();

        model.setRowCount(0);
        for (UserAccount ua : system.getUserAccountDirectory().getUserAccountList()) {
            for (Customer customer : customerDirectory.getCustomerDirectory()) {
                if (customer.getCustomerID().equalsIgnoreCase(ua.getEmployee().getName())) {
                    Object[] row = new Object[8];
                    row[0] = customer.getCustomerID();
                    row[1] = customer.getCustomerName();
                    row[2] = ua.getUsername();
                    row[3] = customer.getCustomerPhonenumber();
                    row[4] = customer.getCustomerAddress();
                    row[5] = customer.getCustomerEmail();
                    row[6] = customer.getCustomerZipcode();
                    row[7] = customer.getLandMark();
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Customerlookuptable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnback = new javax.swing.JButton();
        btnaddcustomer = new javax.swing.JButton();
        btndeletecustomer = new javax.swing.JButton();
        btnupdatecustomer = new javax.swing.JButton();

        Customerlookuptable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Customerlookuptable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Customer Name", "Username", "Phone Number", "Address", "Zipcode", "Landmark", "EmailID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Customerlookuptable);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("    Customer Lookup");

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btnaddcustomer.setText("Add Customer");
        btnaddcustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddcustomerActionPerformed(evt);
            }
        });

        btndeletecustomer.setText("Delete Customer");
        btndeletecustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeletecustomerActionPerformed(evt);
            }
        });

        btnupdatecustomer.setText("Update Customer");
        btnupdatecustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatecustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(btnaddcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102)
                                .addComponent(btndeletecustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnupdatecustomer)))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnback)
                    .addComponent(btndeletecustomer)
                    .addComponent(btnupdatecustomer)
                    .addComponent(btnaddcustomer))
                .addContainerGap(177, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddcustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddcustomerActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) container.getLayout();
        AddCustomerPanel createCustomersJPanel = new AddCustomerPanel(container, system, customerDirectory);
        container.add(createCustomersJPanel);
        layout.next(container);
    }//GEN-LAST:event_btnaddcustomerActionPerformed

    private void btndeletecustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletecustomerActionPerformed
        // TODO add your handling code here:
          int selectedRow = Customerlookuptable.getSelectedRow();
        int count = Customerlookuptable.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                int selectionButton = JOptionPane.YES_NO_OPTION;
                int selectionResult = JOptionPane.showConfirmDialog(null, "Please confirm to delete the customer", "Warning", selectionButton);
                if (selectionResult == JOptionPane.YES_OPTION) {
                    customerDirectory.deleteCustomer(selectedRow, system);
                    populateCustomerList();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a customer row to delete!!");
        }
    }//GEN-LAST:event_btndeletecustomerActionPerformed

    private void btnupdatecustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatecustomerActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = Customerlookuptable.getSelectedRow();
        int count = Customerlookuptable.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                System.out.println("loop");
                CardLayout layout = (CardLayout) container.getLayout();
                Customer customer = customerDirectory.getCustomerId(selectedRow);
                System.out.println(customer);
                UpdateCreatedCustomer1 updatecreatecustomer = new UpdateCreatedCustomer1(system, container, customer, customerDirectory);
                System.out.println("loop2");
                container.add(updatecreatecustomer);
                System.out.println("loop3");
                layout.next(container);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_btnupdatecustomerActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
          container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnbackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Customerlookuptable;
    private javax.swing.JButton btnaddcustomer;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btndeletecustomer;
    private javax.swing.JButton btnupdatecustomer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
